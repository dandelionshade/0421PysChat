-- PsyChat 数据库初始化脚本
-- 本脚本创建必要的数据库、表结构和初始数据

-- 如果存在同名数据库，则删除重建
DROP DATABASE IF EXISTS psychat;

-- 创建数据库
CREATE DATABASE IF NOT EXISTS psychat CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
USE psychat;

-- 创建心理健康资源表
CREATE TABLE IF NOT EXISTS resources (
  id INT AUTO_INCREMENT PRIMARY KEY,
  title VARCHAR(255) NOT NULL,
  description TEXT,
  category VARCHAR(50),
  location_tag VARCHAR(50),
  contact_info VARCHAR(255),
  url VARCHAR(255),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  
  -- 添加索引以提高筛选性能
  INDEX idx_category (category),
  INDEX idx_location (location_tag),
  INDEX idx_created (created_at)
);

-- 插入示例资源数据
INSERT INTO resources (title, description, category, location_tag, contact_info, url)
VALUES 
('全国心理援助热线', '提供24小时心理支持和危机干预', 'crisis', 'national', '400-161-9995', 'https://example.com/hotline'),
('心理健康咨询中心', '提供专业心理咨询服务', 'counseling', 'beijing', '010-12345678', 'https://example.com/center'),
('抑郁症自助小组', '抑郁症患者互助社区', 'support', 'online', 'depression@example.com', 'https://example.com/depression'),
('冥想与放松技巧课程', '学习减压和情绪管理技巧', 'self-help', 'shanghai', '021-87654321', 'https://example.com/meditation'),
('心理健康公益讲座', '免费心理健康教育', 'education', 'guangzhou', 'lectures@example.com', 'https://example.com/lectures'),
('青少年心理辅导热线', '专为青少年提供心理支持和辅导', 'crisis', 'national', '400-888-9999', 'https://example.com/youth-hotline'),
('线上心理健康自测工具', '提供常见心理问题初步自测和建议', 'self-help', 'online', 'tools@example.com', 'https://example.com/assessment');

-- 创建用户反馈表
CREATE TABLE IF NOT EXISTS feedback (
  id INT AUTO_INCREMENT PRIMARY KEY,
  message_id VARCHAR(36) NOT NULL,
  user_query TEXT NOT NULL,
  bot_response TEXT NOT NULL,
  rating TINYINT,
  comment TEXT,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  
  -- 添加索引
  INDEX idx_message_id (message_id),
  INDEX idx_rating (rating)
);

-- 创建聊天会话表 (支持聊天历史功能)
CREATE TABLE IF NOT EXISTS chat_sessions (
  id VARCHAR(36) PRIMARY KEY,     -- Application-specific session ID (e.g., UUID generated by client)
  name VARCHAR(255),              -- 会话名称，可以是基于第一条消息自动生成的
  anythingllm_thread_id VARCHAR(255) NULL, -- Stores the threadSlug from AnythingLLM
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  
  INDEX idx_created (created_at),
  INDEX idx_anythingllm_thread_id (anythingllm_thread_id) -- Index for faster lookups
);

-- 创建聊天消息表 (支持聊天历史功能)
CREATE TABLE IF NOT EXISTS chat_messages (
  id VARCHAR(36) PRIMARY KEY,
  session_id VARCHAR(36) NOT NULL,
  role ENUM('user', 'assistant') NOT NULL,
  content TEXT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  
  INDEX idx_session (session_id),
  FOREIGN KEY (session_id) REFERENCES chat_sessions(id) ON DELETE CASCADE
);

-- =============================================
-- 生产环境配置
-- =============================================

-- 创建数据库用户并设置权限 (生产环境使用)
-- 注意: 在实际部署时替换为强密码并使用环境变量或密钥管理系统存储
CREATE USER IF NOT EXISTS 'psychat_app'@'%' IDENTIFIED BY 'StrongPasswordHere';
CREATE USER IF NOT EXISTS 'psychat_readonly'@'%' IDENTIFIED BY 'ReadOnlyPasswordHere';

-- 应用服务账户 - 只有必要权限
GRANT SELECT, INSERT, UPDATE, DELETE ON psychat.resources TO 'psychat_app'@'%';
GRANT SELECT, INSERT, UPDATE, DELETE ON psychat.feedback TO 'psychat_app'@'%';
GRANT SELECT, INSERT, UPDATE, DELETE ON psychat.chat_sessions TO 'psychat_app'@'%';
GRANT SELECT, INSERT, UPDATE, DELETE ON psychat.chat_messages TO 'psychat_app'@'%';

-- 只读账户 - 用于报表和监控
GRANT SELECT ON psychat.* TO 'psychat_readonly'@'%';

FLUSH PRIVILEGES;

-- =============================================
-- 表优化 (生产环境)
-- =============================================

-- 优化长时间运行的表
ALTER TABLE chat_messages ROW_FORMAT=COMPRESSED KEY_BLOCK_SIZE=8;
ALTER TABLE resources ROW_FORMAT=COMPRESSED KEY_BLOCK_SIZE=8;

-- 添加统计和监控表
CREATE TABLE IF NOT EXISTS system_metrics (
  id INT AUTO_INCREMENT PRIMARY KEY,
  metric_name VARCHAR(50) NOT NULL,
  metric_value FLOAT NOT NULL,
  measured_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  
  INDEX idx_metric_name (metric_name),
  INDEX idx_measured_at (measured_at)
);

-- 添加数据库版本跟踪表 (用于管理迁移和升级)
CREATE TABLE IF NOT EXISTS db_version (
  id INT AUTO_INCREMENT PRIMARY KEY,
  version VARCHAR(20) NOT NULL,
  applied_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  description TEXT,
  
  UNIQUE INDEX idx_version (version)
);

INSERT INTO db_version (version, description) VALUES ('1.0.0', '初始数据库架构');

-- =============================================
-- 维护脚本说明 (生产环境)
-- =============================================

/*
生产环境维护建议:

1. 备份策略:
   - 每日全量备份: mysqldump -u root -p --all-databases > /backup/psychat_full_$(date +\%Y\%m\%d).sql
   - 增量备份: 配置二进制日志并定期备份
   - 考虑使用自动化工具如Percona XtraBackup

2. 监控:
   - 设置监控系统监控连接数、查询性能、存储空间等
   - 定期检查慢查询日志: slow_query_log = 1

3. 性能优化:
   - 为经常搜索的字段添加索引
   - 优化大型表的innodb_buffer_pool_size
   - 使用连接池减少频繁的连接创建/销毁

4. 安全措施:
   - 定期轮换数据库密码
   - 限制数据库仅接受来自应用服务器的连接
   - 启用SSL连接: require_secure_transport = ON

5. 扩展策略:
   - 考虑根据数据增长情况配置表分区
   - 准备读写分离架构规划
*/